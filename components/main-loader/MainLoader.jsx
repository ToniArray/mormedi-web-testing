import { useEffect, useRef } from 'react'
import gsap from 'gsap'
import { SplitText } from 'gsap/dist/SplitText'
import { SlowMo } from 'gsap/dist/EasePack'

import { useMainWrapper } from '../../contexts/MainWrapperContext'
import { useMainLoader } from '../../contexts/LoaderContext'
import useTranslations from '../../config/i18n/useTranslations'

const MainLoader = () => {
  const containerRef = useRef(null)
  const logoRef = useRef(null)
  const claimRef = useRef(null)

  const { setIsLock } = useMainWrapper()
  const { setIsLoaded } = useMainLoader()
  const t = useTranslations()

  useEffect(() => {
    const container = containerRef.current
    const logo = logoRef.current
    const claim = claimRef.current
    if (!container || !logo || !claim) return

    setIsLock(true)
    const splitClaim = new SplitText(claim)
    const duration = 0.8

    const anim = gsap
      .timeline({
        onComplete: () => {
          setIsLoaded(true)
          setIsLock(false)
        },
      })
      .to(logo, { opacity: 1, duration: duration })
      .to(logo, { opacity: 0, duration: duration }, '+=1')
      .to(claim, {
        opacity: 1,
        duration: 0,
      })
      .to(splitClaim.lines, {
        opacity: 1,
        y: 0,
        duration: duration,
        stagger: 0.2,
        ease: new SlowMo(0.25, 0, 0.25, 1),
      })
      .to(container, { opacity: 0, duration: duration }, '+=1')

    return () => anim.kill()
  }, [containerRef, logoRef, claimRef, setIsLock, setIsLoaded])

  return (
    <section className="mainLoader" ref={containerRef}>
      <svg
        className="mainLoader-logo"
        width="144"
        height="26"
        viewBox="0 0 144 26"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        ref={logoRef}
      >
        <path d="M43.937 10.736a7.542 7.542 0 0 0-2.238-2.122c-1.588-.976-3.499-1.31-5.339-1.19-.761.047-1.519.175-2.25.394-1.551.457-2.977 1.377-3.976 2.659-1.228 1.553-1.797 3.554-1.811 5.52-.018 1.128.124 2.267.477 3.342.51 1.594 1.513 3.037 2.874 4.01 1.614 1.173 3.645 1.655 5.614 1.616a9.196 9.196 0 0 0 3.067-.567 7.508 7.508 0 0 0 3.722-3c.987-1.543 1.405-3.393 1.409-5.212-.008-.995-.114-1.995-.392-2.953a8.526 8.526 0 0 0-1.157-2.497Zm-2.356 6.063c-.075.904-.319 1.806-.794 2.583-.422.686-1.036 1.261-1.769 1.598-.995.471-2.148.514-3.21.271-.849-.2-1.651-.632-2.248-1.275-.764-.802-1.188-1.884-1.318-2.976-.105-.946-.044-1.92.256-2.826.274-.834.766-1.604 1.448-2.157.828-.69 1.909-1.022 2.975-1.042.883-.033 1.787.167 2.538.644.79.492 1.383 1.266 1.72 2.13.376.962.485 2.021.402 3.05ZM23.12 11.735c-.223-.847-.61-1.659-1.175-2.328a5.34 5.34 0 0 0-2.067-1.504c-1.714-.7-3.716-.58-5.375.224-.74.374-1.415.896-1.911 1.565-.973-1.359-2.59-2.232-4.254-2.293a5.884 5.884 0 0 0-3.008.773c-.588.33-1.1.786-1.543 1.294V7.842H0v16.937h.024l3.77.028s-.005-3.124-.007-6.134v-4.642c.008-.425.092-.851.272-1.237.28-.6.798-1.081 1.41-1.33.572-.247 1.214-.292 1.827-.229.656.082 1.302.357 1.765.843.532.537.788 1.312.76 2.06 0 2.188.007 10.643.007 10.643l3.785.035s0-7.25-.002-10.773c-.002-.818.341-1.655.985-2.17.56-.464 1.3-.675 2.019-.662.806-.015 1.64.259 2.215.845.538.526.792 1.291.786 2.036.008 3.253.006 10.69.006 10.69l3.781.038V14.427c.018-.904-.044-1.816-.282-2.692ZM87.695 11.735c-.223-.847-.611-1.659-1.176-2.328a5.34 5.34 0 0 0-2.067-1.504c-1.714-.7-3.716-.58-5.375.224-.74.374-1.415.896-1.91 1.565-.974-1.359-2.59-2.232-4.255-2.293a5.884 5.884 0 0 0-3.007.773c-.59.33-1.101.786-1.544 1.294V7.842h-3.787v16.937h.025l3.768.028-.006-6.134v-4.642c.008-.425.092-.851.272-1.237.28-.6.799-1.081 1.41-1.33.572-.247 1.214-.292 1.827-.229.656.082 1.302.357 1.765.843.532.537.788 1.312.76 2.06 0 2.188.008 10.643.008 10.643l3.785.035s0-7.25-.002-10.773c-.003-.818.34-1.655.984-2.17.56-.464 1.3-.675 2.019-.662.806-.015 1.64.259 2.215.845.538.526.792 1.291.786 2.036.008 3.253.006 10.69.006 10.69l3.781.038V14.427c.019-.904-.044-1.816-.282-2.692ZM59.278 7.335c-.276.053-.568.104-.87.159-2.115.371-4.746.834-6.338 2.695-1.743 2.035-1.726 4.986-1.712 7.355.002.198.002.394.002.585v6.655h4.061v-6.656l-.002-.609c-.01-1.69-.022-3.791.73-4.669.645-.753 2.56-1.09 3.959-1.336l.39-.07V7.298l-.146.022-.074.015ZM101.686 7.397c-5.36 0-8.592 3.984-8.592 9.004 0 5.087 3.33 8.601 8.525 8.601 2.997 0 5.296-1.171 7.093-3.28l-2.132-2.442c-1.032 1.306-2.53 2.208-4.63 2.208-2.632 0-4.33-1.306-4.796-3.916h12.021v-1.74c.004-5.525-2.892-8.435-7.489-8.435Zm-4.56 7.194c.4-2.41 1.898-3.816 4.361-3.816 2.498 0 3.663 1.438 3.696 3.816h-8.058ZM127.463 10.14c-.932-1.673-2.965-2.744-5.562-2.744-5.162 0-8.025 4.083-8.025 8.836S116.739 25 121.869 25c2.597 0 4.762-1.07 5.795-2.844V24.8h3.83V1.372h-4.031v8.769Zm-4.861 11.28c-2.798 0-4.695-2.143-4.695-5.22 0-2.878 1.698-5.22 4.695-5.22 2.898 0 4.861 2.142 4.861 5.22 0 3.077-1.966 5.22-4.861 5.22ZM142.482 7.797h-4.029v17h4.029v-17ZM140.484 5.255c1.598 0 2.696-1.14 2.696-2.61 0-1.506-1.098-2.645-2.696-2.645-1.599 0-2.732 1.139-2.732 2.645 0 1.47 1.133 2.61 2.732 2.61Z" />
      </svg>
      <div className="mainLoader-claimContainer">
        <p className="mainLoader-claim" ref={claimRef}>
          {t('home:main-loader')}
        </p>
      </div>
    </section>
  )
}

export default MainLoader
